import { PrismaClient } from "@prisma/client";
import { hashSync } from "bcrypt";

const prisma = new PrismaClient();

async function main() {
  console.log("üå± –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ë–î —Å i18n...");

  // –û—á–∏—Å—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
  console.log("üóëÔ∏è  –û—á–∏—Å—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö...");
  await prisma.schematicLike.deleteMany();
  await prisma.schematicTag.deleteMany();
  await prisma.tagTranslation.deleteMany();
  await prisma.tag.deleteMany();
  await prisma.schematicTranslation.deleteMany();
  await prisma.schematic.deleteMany();
  await prisma.subcategoryTranslation.deleteMany();
  await prisma.subcategory.deleteMany();
  await prisma.categoryTranslation.deleteMany();
  await prisma.category.deleteMany();
  await prisma.session.deleteMany();
  await prisma.account.deleteMany();
  await prisma.user.deleteMany();

  // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ Prisma
  console.log("üë§ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...");

  // –ê–¥–º–∏–Ω
  const admin = await prisma.user.create({
    data: {
      email: "admin@literinth.com",
      password: hashSync("password123", 10),
      name: "Admin User",
      username: "admin",
      bio: "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã",
      role: "ADMIN",
    },
  });

  // –Æ–∑–µ—Ä 1
  const user1 = await prisma.user.create({
    data: {
      email: "alexey@literinth.com",
      password: hashSync("password123", 10),
      name: "Alexey Kuzmichev",
      username: "alexey_kuzmichev",
      bio: "–°–æ–∑–¥–∞—Ç–µ–ª—å –∫—Ä—É—Ç—ã—Ö —Å—Ö–µ–º–∞—Ç–∏–∫–æ–≤",
      role: "USER",
    },
  });

  // –Æ–∑–µ—Ä 2
  const user2 = await prisma.user.create({
    data: {
      email: "ivan@literinth.com",
      password: hashSync("password123", 10),
      name: "Ivan Petrov",
      username: "ivan_redstone",
      bio: "–†–µ–¥—Å—Ç–æ—É–Ω –º–∞—Å—Ç–µ—Ä",
      role: "USER",

    },
  });

  // –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏
  console.log("üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏...");

  // 1. –í—Ä–∞–∂–¥–µ–±–Ω—ã–µ –º–æ–±—ã
  const hostileMobs = await prisma.category.create({
    data: {
      slug: "hostile-mobs",
      order: 1,
      visibleRu: true,
      visibleEn: true,
      translations: {
        create: [
          {
            locale: "RU",
            name: "–í—Ä–∞–∂–¥–µ–±–Ω—ã–µ –º–æ–±—ã",
            description: "–§–µ—Ä–º—ã –≤—Ä–∞–∂–¥–µ–±–Ω—ã—Ö –º–æ–±–æ–≤",
          },
          {
            locale: "EN",
            name: "Hostile Mobs",
            description: "Hostile mob farms",
          },
        ],
      },
      subcategories: {
        create: [
          {
            slug: "zombies",
            order: 1,
            visibleRu: true,
            visibleEn: true,
            translations: {
              create: [
                { locale: "RU", name: "–ó–æ–º–±–∏" },
                { locale: "EN", name: "Zombies" },
              ],
            },
          },
          {
            slug: "skeletons",
            order: 2,
            visibleRu: true,
            visibleEn: true,
            translations: {
              create: [
                { locale: "RU", name: "–°–∫–µ–ª–µ—Ç—ã" },
                { locale: "EN", name: "Skeletons" },
              ],
            },
          },
          {
            slug: "creepers",
            order: 3,
            visibleRu: true,
            visibleEn: true,
            translations: {
              create: [
                { locale: "RU", name: "–ö—Ä–∏–ø–µ—Ä—ã" },
                { locale: "EN", name: "Creepers" },
              ],
            },
          },
        ],
      },
    },
  });

  // 2. –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ –º–æ–±—ã
  const neutralMobs = await prisma.category.create({
    data: {
      slug: "neutral-mobs",
      order: 2,
      visibleRu: true,
      visibleEn: true,
      translations: {
        create: [
          {
            locale: "RU",
            name: "–ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ –º–æ–±—ã",
            description: "–§–µ—Ä–º—ã –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã—Ö –º–æ–±–æ–≤",
          },
          {
            locale: "EN",
            name: "Neutral Mobs",
            description: "Neutral mob farms",
          },
        ],
      },
      subcategories: {
        create: [
          {
            slug: "iron-golems",
            order: 1,
            visibleRu: true,
            visibleEn: true,
            translations: {
              create: [
                { locale: "RU", name: "–ñ–µ–ª–µ–∑–Ω—ã–µ –≥–æ–ª–µ–º—ã" },
                { locale: "EN", name: "Iron Golems" },
              ],
            },
          },
          {
            slug: "bees",
            order: 2,
            visibleRu: true,
            visibleEn: true,
            translations: {
              create: [
                { locale: "RU", name: "–ü—á–µ–ª—ã" },
                { locale: "EN", name: "Bees" },
              ],
            },
          },
        ],
      },
    },
  });

  // 3. –ü–∞—Å—Å–∏–≤–Ω—ã–µ –º–æ–±—ã
  const passiveMobs = await prisma.category.create({
    data: {
      slug: "passive-mobs",
      order: 3,
      visibleRu: true,
      visibleEn: true,
      translations: {
        create: [
          {
            locale: "RU",
            name: "–ü–∞—Å—Å–∏–≤–Ω—ã–µ –º–æ–±—ã",
            description: "–§–µ—Ä–º—ã –ø–∞—Å—Å–∏–≤–Ω—ã—Ö –º–æ–±–æ–≤",
          },
          {
            locale: "EN",
            name: "Passive Mobs",
            description: "Passive mob farms",
          },
        ],
      },
      subcategories: {
        create: [
          {
            slug: "cows",
            order: 1,
            visibleRu: true,
            visibleEn: true,
            translations: {
              create: [
                { locale: "RU", name: "–ö–æ—Ä–æ–≤—ã" },
                { locale: "EN", name: "Cows" },
              ],
            },
          },
          {
            slug: "chickens",
            order: 2,
            visibleRu: true,
            visibleEn: true,
            translations: {
              create: [
                { locale: "RU", name: "–ö—É—Ä–∏—Ü—ã" },
                { locale: "EN", name: "Chickens" },
              ],
            },
          },
          {
            slug: "sheep",
            order: 3,
            visibleRu: true,
            visibleEn: true,
            translations: {
              create: [
                { locale: "RU", name: "–û–≤—Ü—ã" },
                { locale: "EN", name: "Sheep" },
              ],
            },
          },
        ],
      },
    },
  });

  // 4. –ê–≥—Ä–æ–∫—É–ª—å—Ç—É—Ä—ã
  const agriculture = await prisma.category.create({
    data: {
      slug: "agriculture",
      order: 4,
      visibleRu: true,
      visibleEn: true,
      translations: {
        create: [
          {
            locale: "RU",
            name: "–ê–≥—Ä–æ–∫—É–ª—å—Ç—É—Ä—ã",
            description: "–§–µ—Ä–º—ã —Ä–∞—Å—Ç–µ–Ω–∏–π –∏ –≥—Ä–∏–±–æ–≤",
          },
          {
            locale: "EN",
            name: "Agriculture",
            description: "Plant and mushroom farms",
          },
        ],
      },
      subcategories: {
        create: [
          {
            slug: "wheat",
            order: 1,
            visibleRu: true,
            visibleEn: true,
            translations: {
              create: [
                { locale: "RU", name: "–ü—à–µ–Ω–∏—Ü–∞" },
                { locale: "EN", name: "Wheat" },
              ],
            },
          },
          {
            slug: "carrots",
            order: 2,
            visibleRu: true,
            visibleEn: true,
            translations: {
              create: [
                { locale: "RU", name: "–ú–æ—Ä–∫–æ–≤—å" },
                { locale: "EN", name: "Carrots" },
              ],
            },
          },
          {
            slug: "pumpkins",
            order: 3,
            visibleRu: true,
            visibleEn: true,
            translations: {
              create: [
                { locale: "RU", name: "–¢—ã–∫–≤—ã" },
                { locale: "EN", name: "Pumpkins" },
              ],
            },
          },
        ],
      },
    },
  });

  // 5. –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
  const itemProcessing = await prisma.category.create({
    data: {
      slug: "item-processing",
      order: 5,
      visibleRu: true,
      visibleEn: true,
      translations: {
        create: [
          {
            locale: "RU",
            name: "–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤",
            description: "–°–æ—Ä—Ç–∏—Ä–æ–≤—â–∏–∫–∏ –∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞",
          },
          {
            locale: "EN",
            name: "Item Processing",
            description: "Sorters and storage",
          },
        ],
      },
      subcategories: {
        create: [
          {
            slug: "sorters",
            order: 1,
            visibleRu: true,
            visibleEn: true,
            translations: {
              create: [
                { locale: "RU", name: "–°–æ—Ä—Ç–∏—Ä–æ–≤—â–∏–∫–∏" },
                { locale: "EN", name: "Sorters" },
              ],
            },
          },
        ],
      },
    },
  });

  // 6. –©–∏—Ç–ø–æ—Å—Ç
  const shitpost = await prisma.category.create({
    data: {
      slug: "shitpost",
      order: 6,
      visibleRu: true,
      visibleEn: true,
      translations: {
        create: [
          {
            locale: "RU",
            name: "–©–∏—Ç–ø–æ—Å—Ç",
            description: "–ú–µ–º–Ω—ã–µ –∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ —Å—Ö–µ–º–∞—Ç–∏–∫–∏",
          },
          {
            locale: "EN",
            name: "Shitpost",
            description: "Meme and experimental schematics",
          },
        ],
      },
      subcategories: {
        create: [
          {
            slug: "shitpost-archive",
            order: 1,
            visibleRu: true,
            visibleEn: true,
            translations: {
              create: [
                { locale: "RU", name: "–©–∏—Ç–ø–æ—Å—Ç" },
                { locale: "EN", name: "Shitpost Archive" },
              ],
            },
          },
        ],
      },
    },
  });

  // –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const shitpostArchive = await prisma.subcategory.findFirst({
    where: { slug: "shitpost-archive" },
  });

  const sorters = await prisma.subcategory.findFirst({
    where: { slug: "sorters" },
  });

  const pumpkins = await prisma.subcategory.findFirst({
    where: { slug: "pumpkins" },
  });

  // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–≥–æ–≤ —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏
  console.log("üè∑Ô∏è  –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–≥–æ–≤ —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏...");
  const tagPechki = await prisma.tag.create({
    data: {
      slug: "pechki",
      translations: {
        create: [
          { locale: "RU", name: "–ü–µ—á–∫–∏" },
          { locale: "EN", name: "Furnaces" },
        ],
      },
    },
  });

  const tagRedstone = await prisma.tag.create({
    data: {
      slug: "redstone",
      translations: {
        create: [
          { locale: "RU", name: "–†–µ–¥—Å—Ç–æ—É–Ω" },
          { locale: "EN", name: "Redstone" },
        ],
      },
    },
  });

  const tagLitematica = await prisma.tag.create({
    data: {
      slug: "litematica",
      translations: {
        create: [
          { locale: "RU", name: "–õ–∞–π—Ç–º–∞—Ç–∏–∫–∞" },
          { locale: "EN", name: "Litematica" },
        ],
      },
    },
  });

  const tagShitpost = await prisma.tag.create({
    data: {
      slug: "shitpost",
      translations: {
        create: [
          { locale: "RU", name: "–©–∏—Ç–ø–æ—Å—Ç" },
          { locale: "EN", name: "Shitpost" },
        ],
      },
    },
  });

  const tagFarms = await prisma.tag.create({
    data: {
      slug: "farms",
      translations: {
        create: [
          { locale: "RU", name: "–§–µ—Ä–º—ã" },
          { locale: "EN", name: "Farms" },
        ],
      },
    },
  });

  const tagEfficient = await prisma.tag.create({
    data: {
      slug: "efficient",
      translations: {
        create: [
          { locale: "RU", name: "–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ" },
          { locale: "EN", name: "Efficient" },
        ],
      },
    },
  });

  // –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ö–µ–º–∞—Ç–∏–∫–æ–≤ —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏
  console.log("üì¶ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ö–µ–º–∞—Ç–∏–∫–æ–≤ —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏...");

  const schematics = [];

  for (let i = 1; i <= 12; i++) {
    const schematic = await prisma.schematic.create({
      data: {
        slug: `furnace-inferno-${10000 + i * 1000}`,
        authorId: i % 2 === 0 ? user1.id : user2.id,
        categoryId: shitpost.id,
        subcategoryId: shitpostArchive?.id,
        downloads: Math.floor(Math.random() * 1000000),
        views: Math.floor(Math.random() * 5000000),
        published: true,
        visibleRu: true,
        visibleEn: true,
        translations: {
          create: [
            {
              locale: "RU",
              title: `Furnace inferno ${10000 + i * 1000}`,
              description:
                "–ú–µ–≥–∞ —Å—É–ø–µ—Ä –∫—Ä—É—Ç–∞—è –ø–µ—á–∫–∞ —Å —Ñ–∞–π–ª–≤–∞–µ–º –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π",
              content: `# –ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ö–µ–º–∞—Ç–∏–∫–∞
        
–≠—Ç–æ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω –ø–µ—á–∫–∏ —Å –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é!

## –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–ø–ª–∏–≤–∞
- –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –≥–æ—Ç–æ–≤–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏
- –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –¥–∏–∑–∞–π–Ω
- –†–∞–±–æ—Ç–∞–µ—Ç –≤ –ª—é–±—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö`,
            },
            {
              locale: "EN",
              title: `Furnace Inferno ${10000 + i * 1000}`,
              description:
                "Mega super cool furnace with flywheels and automatic loading",
              content: `# Full schematic description
        
This is an experimental furnace design with incredible performance!

## Features:
- Automatic fuel loading
- Finished product sorting
- Compact design
- Works in any conditions`,
            },
          ],
        },
        tags: {
          create: [
            { tag: { connect: { id: tagPechki.id } } },
            { tag: { connect: { id: tagRedstone.id } } },
            { tag: { connect: { id: tagLitematica.id } } },
            { tag: { connect: { id: tagShitpost.id } } },
          ],
        },
      },
    });
    schematics.push(schematic);
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –µ—â—ë —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ —Å—Ö–µ–º–∞—Ç–∏–∫–∏
  await prisma.schematic.create({
    data: {
      slug: "item-sorter-64x",
      authorId: user2.id,
      categoryId: itemProcessing.id,
      subcategoryId: sorters?.id,
      downloads: 450000,
      views: 1200000,
      published: true,
      visibleRu: true,
      visibleEn: true,
      translations: {
        create: [
          {
            locale: "RU",
            title: "–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ 64x",
            description: "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –Ω–∞ 64 —Ç–∏–ø–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤",
            content: "–ü–æ–ª–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ—Å—Ç—Ä–æ–π–∫–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏...",
          },
          {
            locale: "EN",
            title: "Item Sorter 64x",
            description: "Universal sorter for 64 item types",
            content: "Full building instructions...",
          },
        ],
      },
      tags: {
        create: [
          { tag: { connect: { id: tagRedstone.id } } },
          { tag: { connect: { id: tagEfficient.id } } },
        ],
      },
    },
  });

  await prisma.schematic.create({
    data: {
      slug: "auto-pumpkin-farm",
      authorId: user1.id,
      categoryId: agriculture.id,
      subcategoryId: pumpkins?.id,
      downloads: 780000,
      views: 2100000,
      published: true,
      visibleRu: true,
      visibleEn: true,
      translations: {
        create: [
          {
            locale: "RU",
            title: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ñ–µ—Ä–º–∞ —Ç—ã–∫–≤",
            description: "–ü–æ–ª–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ñ–µ—Ä–º–∞ —Ç—ã–∫–≤ —Å –æ–±—Å–µ—Ä–≤–µ—Ä–æ–º",
            content: "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ—Å—Ç—Ä–æ–π–∫–µ —Ñ–µ—Ä–º—ã...",
          },
          {
            locale: "EN",
            title: "Automatic Pumpkin Farm",
            description: "Fully automatic pumpkin farm with observer",
            content: "Farm building instructions...",
          },
        ],
      },
      tags: {
        create: [
          { tag: { connect: { id: tagFarms.id } } },
          { tag: { connect: { id: tagEfficient.id } } },
        ],
      },
    },
  });

  // –°–æ–∑–¥–∞–Ω–∏–µ –ª–∞–π–∫–æ–≤
  console.log("‚ù§Ô∏è  –°–æ–∑–¥–∞–Ω–∏–µ –ª–∞–π–∫–æ–≤...");
  for (const schematic of schematics.slice(0, 6)) {
    await prisma.schematicLike.create({
      data: {
        userId: user1.id,
        schematicId: schematic.id,
      },
    });
  }

  console.log("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!");
  console.log(`
üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: 3 (1 –∞–¥–º–∏–Ω + 2 —é–∑–µ—Ä–∞)
- –ö–∞—Ç–µ–≥–æ—Ä–∏–π: 6
- –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${await prisma.subcategory.count()}
- –°—Ö–µ–º–∞—Ç–∏–∫–æ–≤: ${await prisma.schematic.count()}
- –¢–µ–≥–æ–≤: ${await prisma.tag.count()}
- –õ–∞–π–∫–æ–≤: ${await prisma.schematicLike.count()}

üîê –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:

–ê–î–ú–ò–ù:
Email: admin@literinth.com
Password: password123

–Æ–ó–ï–†–´:
Email: alexey@literinth.com
Password: password123

Email: ivan@literinth.com
Password: password123

üåç –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏ RU/EN
  `);
}

main()
  .catch((e) => {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –ë–î:", e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });